spring.application.name=activity_AI

server.port=8083

spring.data.mongodb.uri=mongodb+srv://arpit196:arpitbeuria@cluster0.uohce.mongodb.net/activity_AI_DB?retryWrites=true&w=majority


eureka.client.enabled=false
spring.cloud.config.enabled=false

logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.org.springframework.web=INFO

spring.main.allow-bean-definition-overriding=true

spring.kafka.bootstrap-servers=localhost:9092


spring.kafka.consumer.group-id=activity-ai-group
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate actual deserialization to these
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Trust all packages for JSON deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Ignore the __TypeId__ header from producer (the root cause!)
spring.kafka.consumer.properties.spring.json.use.type.headers=false


spring.kafka.consumer.properties.spring.json.value.default.type=com.fitness.activity_AI.Entity.ActivityResponse


#
#spring.ai.vertex.ai.gemini.api-key=AIzaSyDX6JeHBaYouT_5LdiOHfmZMk-3hBv__s8
#spring.ai.vertex.ai.gemini.chat.options.model=gemini-1.5-flash


